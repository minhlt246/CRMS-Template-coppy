// ========================================
// Utility Classes
// ========================================

@use "sass:math";
@use "./variables" as *;
@use "./mixins" as *;

// Spacing Utilities
@each $prop, $abbrev in (margin: m, padding: p) {

    @each $size, $length in (0: 0,
        1: 0.25rem,
        2: 0.5rem,
        3: 1rem,
        4: 1.5rem,
        5: 3rem,
        auto: auto) {
        .#{$abbrev}-#{$size} {
            #{$prop}: #{$length} !important;
        }

        .#{$abbrev}t-#{$size} {
            #{$prop}-top: #{$length} !important;
        }

        .#{$abbrev}r-#{$size} {
            #{$prop}-right: #{$length} !important;
        }

        .#{$abbrev}b-#{$size} {
            #{$prop}-bottom: #{$length} !important;
        }

        .#{$abbrev}l-#{$size} {
            #{$prop}-left: #{$length} !important;
        }

        .#{$abbrev}x-#{$size} {
            #{$prop}-left: #{$length} !important;
            #{$prop}-right: #{$length} !important;
        }

        .#{$abbrev}y-#{$size} {
            #{$prop}-top: #{$length} !important;
            #{$prop}-bottom: #{$length} !important;
        }
    }
}

// Text Utilities
.text-start {
    text-align: left !important;
}

.text-end {
    text-align: right !important;
}

.text-center {
    text-align: center !important;
}

.text-justify {
    text-align: justify !important;
}

.text-nowrap {
    white-space: nowrap !important;
}

.text-wrap {
    white-space: normal !important;
}

.text-break {
    word-wrap: break-word !important;
    word-break: break-word !important;
}

// Font Weight
.fw-light {
    font-weight: var(--font-weight-light) !important;
}

.fw-normal {
    font-weight: var(--font-weight-normal) !important;
}

.fw-medium {
    font-weight: var(--font-weight-medium) !important;
}

.fw-semibold {
    font-weight: var(--font-weight-semibold) !important;
}

.fw-bold {
    font-weight: var(--font-weight-bold) !important;
}

.fw-extrabold {
    font-weight: var(--font-weight-extrabold) !important;
}

// Font Style
.fst-italic {
    font-style: italic !important;
}

.fst-normal {
    font-style: normal !important;
}

// Line Height
.lh-1 {
    line-height: 1 !important;
}

.lh-sm {
    line-height: var(--line-height-sm) !important;
}

.lh-base {
    line-height: var(--line-height-base) !important;
}

.lh-lg {
    line-height: var(--line-height-lg) !important;
}

// Text Transform
.text-lowercase {
    text-transform: lowercase !important;
}

.text-uppercase {
    text-transform: uppercase !important;
}

.text-capitalize {
    text-transform: capitalize !important;
}

// Text Decoration
.text-decoration-none {
    text-decoration: none !important;
}

.text-decoration-underline {
    text-decoration: underline !important;
}

.text-decoration-line-through {
    text-decoration: line-through !important;
}

// Text Color
@each $color, $value in (primary: var(--primary),
    secondary: var(--secondary),
    success: var(--success),
    danger: var(--danger),
    warning: var(--warning),
    info: var(--info),
    light: var(--light),
    dark: var(--dark),
    "white": var(--white),
    muted: var(--gray-600),
    "black-50": rgba(0, 0, 0, 0.5),
    "white-50": rgba(255, 255, 255, 0.5)) {
    .text-#{$color} {
        color: #{$value} !important;
    }
}

// Background Color
@each $color, $value in (primary: var(--primary),
    secondary: var(--secondary),
    success: var(--success),
    danger: var(--danger),
    warning: var(--warning),
    info: var(--info),
    light: var(--light),
    dark: var(--dark),
    "white": var(--white),
    "transparent": transparent) {
    .bg-#{$color} {
        background-color: #{$value} !important;
    }
}

// Background Gradient
.bg-gradient {
    background-image: var(--bs-gradient) !important;
}

// Display
.d-none {
    display: none !important;
}

.d-inline {
    display: inline !important;
}

.d-inline-block {
    display: inline-block !important;
}

.d-block {
    display: block !important;
}

.d-table {
    display: table !important;
}

.d-table-row {
    display: table-row !important;
}

.d-table-cell {
    display: table-cell !important;
}

.d-flex {
    display: flex !important;
}

.d-inline-flex {
    display: inline-flex !important;
}

// Flexbox
.flex-row {
    flex-direction: row !important;
}

.flex-column {
    flex-direction: column !important;
}

.flex-row-reverse {
    flex-direction: row-reverse !important;
}

.flex-column-reverse {
    flex-direction: column-reverse !important;
}

.flex-wrap {
    flex-wrap: wrap !important;
}

.flex-nowrap {
    flex-wrap: nowrap !important;
}

.flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
}

.justify-content-start {
    justify-content: flex-start !important;
}

.justify-content-end {
    justify-content: flex-end !important;
}

.justify-content-center {
    justify-content: center !important;
}

.justify-content-between {
    justify-content: space-between !important;
}

.justify-content-around {
    justify-content: space-around !important;
}

.justify-content-evenly {
    justify-content: space-evenly !important;
}

.align-items-start {
    align-items: flex-start !important;
}

.align-items-end {
    align-items: flex-end !important;
}

.align-items-center {
    align-items: center !important;
}

.align-items-baseline {
    align-items: baseline !important;
}

.align-items-stretch {
    align-items: stretch !important;
}

.align-content-start {
    align-content: flex-start !important;
}

.align-content-end {
    align-content: flex-end !important;
}

.align-content-center {
    align-content: center !important;
}

.align-content-between {
    align-content: space-between !important;
}

.align-content-around {
    align-content: space-around !important;
}

.align-content-stretch {
    align-content: stretch !important;
}

.align-self-auto {
    align-self: auto !important;
}

.align-self-start {
    align-self: flex-start !important;
}

.align-self-end {
    align-self: flex-end !important;
}

.align-self-center {
    align-self: center !important;
}

.align-self-baseline {
    align-self: baseline !important;
}

.align-self-stretch {
    align-self: stretch !important;
}

.flex-fill {
    flex: 1 1 auto !important;
}

.flex-grow-0 {
    flex-grow: 0 !important;
}

.flex-grow-1 {
    flex-grow: 1 !important;
}

.flex-shrink-0 {
    flex-shrink: 0 !important;
}

.flex-shrink-1 {
    flex-shrink: 1 !important;
}

// Order
@for $i from 0 through 5 {
    .order-#{$i} {
        order: #{$i} !important;
    }
}

// Position
.position-static {
    position: static !important;
}

.position-relative {
    position: relative !important;
}

.position-absolute {
    position: absolute !important;
}

.position-fixed {
    position: fixed !important;
}

.position-sticky {
    position: sticky !important;
}

// Top, Right, Bottom, Left
@for $i from 0 through 5 {
    .top-#{$i} {
        top: #{$i * 0.25}rem !important;
    }

    .right-#{$i} {
        right: #{$i * 0.25}rem !important;
    }

    .bottom-#{$i} {
        bottom: #{$i * 0.25}rem !important;
    }

    .left-#{$i} {
        left: #{$i * 0.25}rem !important;
    }
}

// Width & Height
.w-25 {
    width: 25% !important;
}

.w-50 {
    width: 50% !important;
}

.w-75 {
    width: 75% !important;
}

.w-100 {
    width: 100% !important;
}

.w-auto {
    width: auto !important;
}

.h-25 {
    height: 25% !important;
}

.h-50 {
    height: 50% !important;
}

.h-75 {
    height: 75% !important;
}

.h-100 {
    height: 100% !important;
}

.h-auto {
    height: auto !important;
}

.mw-100 {
    max-width: 100% !important;
}

.mh-100 {
    max-height: 100% !important;
}

// Viewport
.min-vh-100 {
    min-height: 100vh !important;
}

.vh-100 {
    height: 100vh !important;
}

.vw-100 {
    width: 100vw !important;
}

// Border
.border {
    border: 1px solid var(--gray-300) !important;
}

.border-0 {
    border: 0 !important;
}

.border-top {
    border-top: 1px solid var(--gray-300) !important;
}

.border-end {
    border-right: 1px solid var(--gray-300) !important;
}

.border-bottom {
    border-bottom: 1px solid var(--gray-300) !important;
}

.border-start {
    border-left: 1px solid var(--gray-300) !important;
}

// Border Width
@for $i from 1 through 5 {
    .border-#{$i} {
        border-width: #{$i}px !important;
    }
}

// Border Color
@each $color, $value in (primary: var(--primary),
    secondary: var(--secondary),
    success: var(--success),
    danger: var(--danger),
    warning: var(--warning),
    info: var(--info),
    light: var(--light),
    dark: var(--dark),
    "white": var(--white)) {
    .border-#{$color} {
        border-color: #{$value} !important;
    }
}

// Border Radius
.rounded {
    border-radius: var(--border-radius) !important;
}

.rounded-0 {
    border-radius: 0 !important;
}

.rounded-1 {
    border-radius: var(--border-radius-sm) !important;
}

.rounded-2 {
    border-radius: var(--border-radius) !important;
}

.rounded-3 {
    border-radius: var(--border-radius-lg) !important;
}

.rounded-4 {
    border-radius: var(--border-radius-xl) !important;
}

.rounded-circle {
    border-radius: 50% !important;
}

.rounded-pill {
    border-radius: 50rem !important;
}

.rounded-top {
    border-top-left-radius: var(--border-radius) !important;
    border-top-right-radius: var(--border-radius) !important;
}

.rounded-end {
    border-top-right-radius: var(--border-radius) !important;
    border-bottom-right-radius: var(--border-radius) !important;
}

.rounded-bottom {
    border-bottom-right-radius: var(--border-radius) !important;
    border-bottom-left-radius: var(--border-radius) !important;
}

.rounded-start {
    border-top-left-radius: var(--border-radius) !important;
    border-bottom-left-radius: var(--border-radius) !important;
}

// Shadow
.shadow-sm {
    box-shadow: var(--shadow-sm) !important;
}

.shadow {
    box-shadow: var(--shadow) !important;
}

.shadow-lg {
    box-shadow: var(--shadow-lg) !important;
}

.shadow-none {
    box-shadow: none !important;
}

// Opacity
@for $i from 0 through 10 {
    .opacity-#{$i} {
        opacity: #{math.div($i, 10)} !important;
    }
}

// Overflow
.overflow-auto {
    overflow: auto !important;
}

.overflow-hidden {
    overflow: hidden !important;
}

.overflow-visible {
    overflow: visible !important;
}

.overflow-scroll {
    overflow: scroll !important;
}

.overflow-x-auto {
    overflow-x: auto !important;
}

.overflow-x-hidden {
    overflow-x: hidden !important;
}

.overflow-x-visible {
    overflow-x: visible !important;
}

.overflow-x-scroll {
    overflow-x: scroll !important;
}

.overflow-y-auto {
    overflow-y: auto !important;
}

.overflow-y-hidden {
    overflow-y: hidden !important;
}

.overflow-y-visible {
    overflow-y: visible !important;
}

.overflow-y-scroll {
    overflow-y: scroll !important;
}

// Visibility
.visible {
    visibility: visible !important;
}

.invisible {
    visibility: hidden !important;
}

// Cursor
.cursor-pointer {
    cursor: pointer !important;
}

.cursor-default {
    cursor: default !important;
}

.cursor-not-allowed {
    cursor: not-allowed !important;
}

// User Select
.user-select-all {
    user-select: all !important;
}

.user-select-auto {
    user-select: auto !important;
}

.user-select-none {
    user-select: none !important;
}

// Pointer Events
.pe-none {
    pointer-events: none !important;
}

.pe-auto {
    pointer-events: auto !important;
}

// Resize
.resize-none {
    resize: none !important;
}

.resize-both {
    resize: both !important;
}

.resize-horizontal {
    resize: horizontal !important;
}

.resize-vertical {
    resize: vertical !important;
}

// Float
.float-start {
    float: left !important;
}

.float-end {
    float: right !important;
}

.float-none {
    float: none !important;
}

// Clearfix
.clearfix::after {
    display: block;
    clear: both;
    content: "";
}

// Screen Reader Only
.sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}

.sr-only-focusable:active,
.sr-only-focusable:focus {
    position: static !important;
    width: auto !important;
    height: auto !important;
    overflow: visible !important;
    clip: auto !important;
    white-space: normal !important;
}

// Text Truncate
.text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Responsive Utilities
@each $breakpoint, $value in $breakpoints {
    @if $value >0 {
        @include media-breakpoint-up($breakpoint) {
            .d-#{$breakpoint}-none {
                display: none !important;
            }

            .d-#{$breakpoint}-inline {
                display: inline !important;
            }

            .d-#{$breakpoint}-inline-block {
                display: inline-block !important;
            }

            .d-#{$breakpoint}-block {
                display: block !important;
            }

            .d-#{$breakpoint}-table {
                display: table !important;
            }

            .d-#{$breakpoint}-table-row {
                display: table-row !important;
            }

            .d-#{$breakpoint}-table-cell {
                display: table-cell !important;
            }

            .d-#{$breakpoint}-flex {
                display: flex !important;
            }

            .d-#{$breakpoint}-inline-flex {
                display: inline-flex !important;
            }

            .flex-#{$breakpoint}-row {
                flex-direction: row !important;
            }

            .flex-#{$breakpoint}-column {
                flex-direction: column !important;
            }

            .flex-#{$breakpoint}-row-reverse {
                flex-direction: row-reverse !important;
            }

            .flex-#{$breakpoint}-column-reverse {
                flex-direction: column-reverse !important;
            }

            .flex-#{$breakpoint}-wrap {
                flex-wrap: wrap !important;
            }

            .flex-#{$breakpoint}-nowrap {
                flex-wrap: nowrap !important;
            }

            .flex-#{$breakpoint}-wrap-reverse {
                flex-wrap: wrap-reverse !important;
            }

            .justify-content-#{$breakpoint}-start {
                justify-content: flex-start !important;
            }

            .justify-content-#{$breakpoint}-end {
                justify-content: flex-end !important;
            }

            .justify-content-#{$breakpoint}-center {
                justify-content: center !important;
            }

            .justify-content-#{$breakpoint}-between {
                justify-content: space-between !important;
            }

            .justify-content-#{$breakpoint}-around {
                justify-content: space-around !important;
            }

            .justify-content-#{$breakpoint}-evenly {
                justify-content: space-evenly !important;
            }

            .align-items-#{$breakpoint}-start {
                align-items: flex-start !important;
            }

            .align-items-#{$breakpoint}-end {
                align-items: flex-end !important;
            }

            .align-items-#{$breakpoint}-center {
                align-items: center !important;
            }

            .align-items-#{$breakpoint}-baseline {
                align-items: baseline !important;
            }

            .align-items-#{$breakpoint}-stretch {
                align-items: stretch !important;
            }

            .align-content-#{$breakpoint}-start {
                align-content: flex-start !important;
            }

            .align-content-#{$breakpoint}-end {
                align-content: flex-end !important;
            }

            .align-content-#{$breakpoint}-center {
                align-content: center !important;
            }

            .align-content-#{$breakpoint}-between {
                align-content: space-between !important;
            }

            .align-content-#{$breakpoint}-around {
                align-content: space-around !important;
            }

            .align-content-#{$breakpoint}-stretch {
                align-content: stretch !important;
            }

            .align-self-#{$breakpoint}-auto {
                align-self: auto !important;
            }

            .align-self-#{$breakpoint}-start {
                align-self: flex-start !important;
            }

            .align-self-#{$breakpoint}-end {
                align-self: flex-end !important;
            }

            .align-self-#{$breakpoint}-center {
                align-self: center !important;
            }

            .align-self-#{$breakpoint}-baseline {
                align-self: baseline !important;
            }

            .align-self-#{$breakpoint}-stretch {
                align-self: stretch !important;
            }

            .text-#{$breakpoint}-start {
                text-align: left !important;
            }

            .text-#{$breakpoint}-end {
                text-align: right !important;
            }

            .text-#{$breakpoint}-center {
                text-align: center !important;
            }

            .float-#{$breakpoint}-start {
                float: left !important;
            }

            .float-#{$breakpoint}-end {
                float: right !important;
            }

            .float-#{$breakpoint}-none {
                float: none !important;
            }
        }
    }
}